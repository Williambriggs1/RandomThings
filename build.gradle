plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
}


group = 'me.will'
version = '1.0-SNAPSHOT'

shadowJar {
    archiveBaseName.set('RandomThings')
    archiveClassifier.set('')
    archiveVersion.set('1.0')
    exclude("META-INF/**")


    relocate('com.moandjiezana.toml', 'me.will.randomthings.toml4j')
}

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven { url = "https://mvn.lumine.io/repository/maven-public/" }
    maven{ url = "https://repo.codemc.org/repository/maven-public/" }
}



dependencies {
    compileOnly('io.papermc.paper:paper-api:1.18.2-R0.1-SNAPSHOT')
    compileOnly("io.lumine:MythicLib-dist:1.3.1")
    compileOnly("de.tr7zw:item-nbt-api:2.9.2")
    compileOnly('net.Indyuce:MMOItems:6.7.3')
    implementation('com.moandjiezana.toml:toml4j:0.7.2')
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
